<?php

namespace DoctrineORMModule\Proxy\__CG__\Product\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Product\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'translit', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'img', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'indexed', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'qty', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idSupplier', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idStatus', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idCatalog', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idBrand');
        }

        return array('__isInitialized__', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'id', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'name', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'translit', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'description', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'price', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'img', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'indexed', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'qty', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idSupplier', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idStatus', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idCatalog', '' . "\0" . 'Product\\Entity\\Product' . "\0" . 'idBrand');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setTranslit($translit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTranslit', array($translit));

        return parent::setTranslit($translit);
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslit', array());

        return parent::getTranslit();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setImg($img)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImg', array($img));

        return parent::setImg($img);
    }

    /**
     * {@inheritDoc}
     */
    public function getImg()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImg', array());

        return parent::getImg();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndexed($indexed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndexed', array($indexed));

        return parent::setIndexed($indexed);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndexed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndexed', array());

        return parent::getIndexed();
    }

    /**
     * {@inheritDoc}
     */
    public function setQty($qty)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQty', array($qty));

        return parent::setQty($qty);
    }

    /**
     * {@inheritDoc}
     */
    public function getQty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQty', array());

        return parent::getQty();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdSupplier(\Data\Entity\Store $idSupplier = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdSupplier', array($idSupplier));

        return parent::setIdSupplier($idSupplier);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdSupplier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdSupplier', array());

        return parent::getIdSupplier();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdStatus(\Data\Entity\Status $idStatus = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdStatus', array($idStatus));

        return parent::setIdStatus($idStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdStatus', array());

        return parent::getIdStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCatalog(\Catalog\Entity\Catalog $idCatalog = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCatalog', array($idCatalog));

        return parent::setIdCatalog($idCatalog);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCatalog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCatalog', array());

        return parent::getIdCatalog();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdBrand(\Catalog\Entity\Brand $idBrand = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdBrand', array($idBrand));

        return parent::setIdBrand($idBrand);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdBrand', array());

        return parent::getIdBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', array());

        return parent::getArrayCopy();
    }

    /**
     * {@inheritDoc}
     */
    public function populate($data = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'populate', array($data));

        return parent::populate($data);
    }

}
