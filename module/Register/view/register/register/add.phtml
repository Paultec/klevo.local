<?php
//
//$form = $this->form;
//$form->setAttribute('action', $this->url('register', array('action' => 'add')));
//$form->prepare();
//
//echo $this->form()->openTag($form);
//echo $this->formCollection($form);
//echo $this->form()->closeTag();

$title = 'Журнал движения товаров';
$this->headTitle($title);
?>

<section class="col col-md-2">
    <p class="back"><span class="glyphicon glyphicon-arrow-left"></span> Назад</p>
</section>
<section class="col col-md-7">
    <h3><?php echo $this->escapeHtml($title); ?></h3>
    <?php
    $form = $this->form;
    $form->setAttribute('action', $this->url('register/default', array('action' => 'add')));
    $form->prepare();

    echo $this->form()->openTag($form);

    echo $this->formRow($form->get('date'));

    echo '<label>Тип операции:
              <select class="form-control operation-type" name="idOperation" required>',
                $this->partialLoop('register/partial/optionLoop.phtml', $this->operation),
             '</select>
          </label>';

    echo '<label>От кого:
             <select class="form-control operation-from" name="idStoreFrom" required>',
                $this->partialLoop('register/partial/optionLoop.phtml', $this->storeFrom),
             '</select>
         </label>';

    echo '<label>Кому:
              <select class="form-control operation-to" name="idStoreTo" required>',
                $this->partialLoop('register/partial/optionLoop.phtml', $this->storeTo),
             '</select>
          </label>';

    echo '<label>Вид оплаты:
             <select class="form-control" name="idPaymentType" required>',
                $this->partialLoop('register/partial/optionLoop.phtml', $this->paymentType),
            '</select>
         </label>';

    echo '<label>Статус операции:
            <select class="form-control" name="idStatus" required>',
                $this->partialLoop('register/partial/optionLoop.phtml', $this->status),
            '</select>
        </label>';

    echo $this->formSubmit($form->get('submit'));

    echo $this->form()->closeTag();
    ?>
</section>
<script>
    (function() {
        var compare = [
            {  },
            { 3: 1 },
            { 1: 2 },
            { 2: 1 },
            { 1: 3 },
            { 1: 1 }
        ];

        var operationFrom   = $('.operation-from').find('option'),
            operationTo     = $('.operation-to').find('option');

        var source = $('select').filter(':not(".operation-type")');

        source.add('.btn').prop('disabled', true);

        $('.operation-type').on('change', function() {
            var val = $(this).val();

            operationFrom.first().prop('selected', true);
            operationTo.first().prop('selected', true);

            if (compare[val] !== undefined) {
                prepareSelect(compare[val]);
            }

            if (val != '') {
                triggerDisabled(source, $(this));
            } else {
                triggerDisabled(source, $(this));
            }
        });

        function triggerDisabled(source, $this) {
            if ($this.val() != '') {
                source.add('.btn').prop('disabled', false);
            } else {
                source.add('.btn').prop('disabled', true);
            }
        }

        function prepareSelect(compare) {
            for (var key in compare) if (compare.hasOwnProperty(key)) {
                var from = key,
                    to   = compare[key];
            }

            operationFrom.add(operationTo).prop('disabled', true).find('option').css('display', 'inline');

            operationFrom.each(function() {
                var $this = $(this);

                if ($this.data('attrib') == from) {
                    $this.prop('disabled', false).css('display', 'inline');
                } else {
                    $this.prop('disabled', true).css('display', 'none');
                }
            });

            operationTo.each(function() {
                var $this = $(this);

                if ($(this).data('attrib') == to) {
                    $this.prop('disabled', false).css('display', 'inline');
                } else {
                    $this.prop('disabled', true).css('display', 'none');
                }
            });
        }
    })();
</script>